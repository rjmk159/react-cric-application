{"ast":null,"code":"import axios from 'axios';\nimport { apiKey } from './constants';\nlet api = {};\nlet BASE_URL = `https://cricapi.com`;\n\napi.get = url => {\n  return new Promise((resolve, reject) => {\n    axios.get(`${BASE_URL}${url}`, {\n      params: {\n        'apiKey': apiKey\n      }\n    }).then(response => {\n      resolve(response);\n    }).catch(error => {\n      reject(error);\n    });\n  });\n};\n\napi.post = (url, body) => {\n  return new Promise((resolve, reject) => {\n    axios.post(`${BASE_URL}/${url}`, body).then(response => {\n      resolve(response);\n    }).catch(error => {\n      reject(error);\n    });\n  });\n};\n\nexport default api;","map":{"version":3,"sources":["/Users/rajajunaid/Desktop/GreyAtom/cric-info/src/utils/api.js"],"names":["axios","apiKey","api","BASE_URL","get","url","Promise","resolve","reject","params","then","response","catch","error","post","body"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,aAArB;AAEA,IAAIC,GAAG,GAAG,EAAV;AACA,IAAIC,QAAQ,GAAI,qBAAhB;;AAEAD,GAAG,CAACE,GAAJ,GAAWC,GAAD,IAAS;AACjB,SAAO,IAAIC,OAAJ,CAAa,CAACC,OAAD,EAAUC,MAAV,KAAoB;AACtCR,IAAAA,KAAK,CAACI,GAAN,CAAW,GAAED,QAAS,GAAEE,GAAI,EAA5B,EAA8B;AAAEI,MAAAA,MAAM,EAAE;AAAC,kBAASR;AAAV;AAAV,KAA9B,EACGS,IADH,CACSC,QAAD,IAAc;AAClBJ,MAAAA,OAAO,CAACI,QAAD,CAAP;AACD,KAHH,EAIGC,KAJH,CAIUC,KAAD,IAAW;AAChBL,MAAAA,MAAM,CAACK,KAAD,CAAN;AACD,KANH;AAOD,GARM,CAAP;AASD,CAVD;;AAYAX,GAAG,CAACY,IAAJ,GAAW,CAACT,GAAD,EAAKU,IAAL,KAAc;AACvB,SAAO,IAAIT,OAAJ,CAAa,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACvCR,IAAAA,KAAK,CAACc,IAAN,CAAY,GAAEX,QAAS,IAAGE,GAAI,EAA9B,EAAiCU,IAAjC,EACCL,IADD,CACQC,QAAD,IAAa;AAClBJ,MAAAA,OAAO,CAACI,QAAD,CAAP;AACD,KAHD,EAICC,KAJD,CAISC,KAAD,IAAU;AAChBL,MAAAA,MAAM,CAACK,KAAD,CAAN;AACD,KAND;AAOD,GARM,CAAP;AASD,CAVD;;AAWA,eAAeX,GAAf","sourcesContent":["import axios from 'axios';\nimport {apiKey} from './constants'\n\nlet api = {};\nlet BASE_URL = `https://cricapi.com`;\n\napi.get = (url) => {\n  return new Promise( (resolve, reject)=> {\n    axios.get(`${BASE_URL}${url}`,{ params: {'apiKey':apiKey} })\n      .then((response) => {\n        resolve(response);\n      })\n      .catch((error) => {\n        reject(error)\n      })\n  });\n}\n\napi.post = (url,body) => {\n  return new Promise( (resolve, reject) => {\n    axios.post(`${BASE_URL}/${url}`, body)\n    .then( (response)=> {\n      resolve(response)\n    })\n    .catch( (error)=> {\n      reject(error)\n    });\n  });\n}\nexport default api;"]},"metadata":{},"sourceType":"module"}